#/bin/bash
LOCATION=$(cd $(dirname $0); pwd)
PATH="${LOCATION}:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin"
LOG="/var/log/$(basename $0).log"

################################################################################
# Usage Validaton
#
usage(){
    echo "Usage [sudo] $0 <fully.qualified.domain.nam> [<ldap_secret>]"
    exit 1;
}

# we change root owned files
[ ${UID} -eq 0 ]||echo "Nononononoo. Be you root. (or use sudo)"

if [ $# -lt 1 ]; then
    echo "not enough arguments"
    usage
fi
if [ $# -gt 2 ]; then
    echo "too many arguments"
    usage
fi

DESIRED_FQDN=$1; 
SUPPLIED_SECRET=$2; 

echo "${DESIRED_FQDN}"|grep -q "\."
if [ $? -ne 0 ]; then usage; fi

################################################################################
# Now we modify the system
#

################################################################################
# Set the new hostname
#
hostname "${DESIRED_FQDN}"
hostname | grep -q "${DESIRED_FQDN}"
if [ $? -ne 0 ]; then 
    echo "unable to set hostname. cannot continue..."
    exit 1
fi

################################################################################
# Install what we need to continue.
#
pkg_prereqs
if [ $? -ne 0 ]; then 
    echo "unalbe to install required packages"
    exit 1;
fi

################################################################################
# retrive the certificate tree
#
retrieve_cacert
if [ $? -ne 0 ]; then 
    echo "Unable to retrieve the CA Certificate tree. Cannot continue."
    exit 1;
fi

################################################################################
# set the secret
#
if [ ! -z ${SUPPLIED_SECRET} ];then
    secret-init ${SUPPLIED_SECRET}
else 
    secret-init                     # generate a new random one
fi
if [ -z "$(secret)" ]; then 
    echo "Unable to create the secret. Cannot continue."
    exit 1;
fi

################################################################################
# Set up root's .ldaprc to get anon user credenitals
#
create_ldaprc

################################################################################
# Set up global ldap.conf with anon user
#
create_ldap.conf

################################################################################
# test that we can bind to LDAP
#
testldap > /dev/null


################################################################################
# update our ldap record
#
ldapmodify-sshpublickey
ldapadd-selfrecord

################################################################################
# test that we can bind to LDAP after modification
#
testldap > /dev/null || exit 1  # make sure it works or abort

################################################################################
# Refresh the nameservice switcher
/usr/sbin/nscd -i passwd; /usr/sbin/nscd -i group; /etc/init.d/nscd restart

################################################################################
# install the latest version of puppet
puppet_init

################################################################################
# then we hand off the bootstrap to puppet
/usr/local/sbin/pupprun >> $LOG 2>&1 &

exit 0

